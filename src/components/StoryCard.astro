---
import type { Locale } from '../utils/i18n';
import { getSkillsByIds } from '../utils/skills-taxonomy';
import { getTranslation } from '../utils/i18n';

interface Props {
  title: string;
  emoji: string;
  skills: string[];
  storyId: string;
  estimatedReadTime?: number;
  locale: Locale;
  slug: string;
  isInteractive?: boolean;
  provider?: 'local' | 'google-drive' | 'external';
  providerUrl?: string;
  publishDate?: Date;
}

const { title, emoji, skills, storyId, estimatedReadTime, locale, slug, isInteractive, provider, providerUrl, publishDate } = Astro.props;

// Check if story is new (published within last 7 days)
const isNew = publishDate ? (Date.now() - publishDate.getTime()) / (1000 * 60 * 60 * 24) <= 7 : false;

const skillObjects = getSkillsByIds(skills);
const storyUrl = locale === 'de' ? `/stories/${slug}` : `/${locale}/stories/${slug}`;
---

<article class="story-card">
  <a href={storyUrl} class="card-link">
    <div class="badges">
      {isNew && (
        <div class="new-badge">
          ‚ú® {getTranslation(locale, 'new')}
        </div>
      )}
      {isInteractive && (
        <div class="interactive-badge">
          {getTranslation(locale, 'interactive')}
        </div>
      )}
      {provider && provider !== 'local' && (
        <div class={`provider-badge provider-${provider}`}>
          {provider === 'google-drive' ? 'üìÅ Drive' : 'üîó External'}
        </div>
      )}
    </div>
    <div class="card-header">
      <span class="emoji-icon">{emoji}</span>
      <h3 class="story-title">{title}</h3>
    </div>

    <div class="card-body">
      <div class="skills-tags">
        {skillObjects.slice(0, 3).map(skill => (
          <span class="skill-tag">{skill[locale]}</span>
        ))}
      </div>

      {estimatedReadTime && (
        <div class="read-time">
          <svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
            <path d="M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0zm0 1a7 7 0 1 0 0 14A7 7 0 0 0 8 1zm.5 2.5v4.793l2.854 2.853-.708.708-3-3A.5.5 0 0 1 7.5 8.5v-5h1z"/>
          </svg>
          <span>{estimatedReadTime} min</span>
        </div>
      )}
    </div>
  </a>
</article>

<style>
  .story-card {
    background: white;
    border-radius: 12px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
    overflow: hidden;
    position: relative;
  }

  .story-card:hover {
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
    transform: translateY(-4px);
  }

  .card-link {
    display: block;
    text-decoration: none;
    color: inherit;
    padding: 1.5rem;
  }

  .card-header {
    display: flex;
    align-items: flex-start;
    gap: 1rem;
    margin-bottom: 1rem;
  }

  .emoji-icon {
    font-size: 3rem;
    line-height: 1;
    flex-shrink: 0;
  }

  .story-title {
    font-size: 1.25rem;
    font-weight: 600;
    color: #333;
    margin: 0;
    line-height: 1.3;
  }

  .card-body {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .skills-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .skill-tag {
    display: inline-block;
    padding: 0.25rem 0.75rem;
    background: #FFD93D;
    color: #333;
    border-radius: 16px;
    font-size: 0.8rem;
    font-weight: 500;
  }

  .read-time {
    display: flex;
    align-items: center;
    gap: 0.25rem;
    color: #666;
    font-size: 0.85rem;
  }

  .read-time svg {
    flex-shrink: 0;
  }

  .badges {
    position: absolute;
    top: 10px;
    right: 10px;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    align-items: flex-end;
    z-index: 2;
    max-width: calc(100% - 20px);
  }

  [dir="rtl"] .badges {
    right: auto;
    left: 10px;
    align-items: flex-start;
  }

  /* Ensure badges don't overlap with title */
  .card-header {
    padding-right: 90px;
  }

  [dir="rtl"] .card-header {
    padding-right: 0;
    padding-left: 90px;
  }

  .interactive-badge {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    padding: 0.35rem 0.75rem;
    border-radius: 20px;
    font-size: 0.75rem;
    font-weight: 600;
    box-shadow: 0 2px 8px rgba(102, 126, 234, 0.4);
  }

  .provider-badge {
    padding: 0.35rem 0.75rem;
    border-radius: 20px;
    font-size: 0.7rem;
    font-weight: 600;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);
  }

  .provider-google-drive {
    background: linear-gradient(135deg, #4285f4 0%, #34a853 100%);
    color: white;
  }

  .provider-external {
    background: linear-gradient(135deg, #f39c12 0%, #e67e22 100%);
    color: white;
  }

  .new-badge {
    background: linear-gradient(135deg, #ff6b6b 0%, #ee5a6f 100%);
    color: white;
    padding: 0.35rem 0.75rem;
    border-radius: 20px;
    font-size: 0.7rem;
    font-weight: 600;
    box-shadow: 0 2px 6px rgba(255, 107, 107, 0.4);
    animation: pulse 2s ease-in-out infinite;
  }

  @keyframes pulse {
    0%, 100% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.05);
    }
  }

  @media (max-width: 768px) {
    .card-link {
      padding: 1rem;
    }

    .emoji-icon {
      font-size: 2.5rem;
    }

    .story-title {
      font-size: 1.1rem;
    }
  }
</style>