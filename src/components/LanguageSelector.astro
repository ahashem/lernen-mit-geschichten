---
import type { Locale } from '../utils/i18n';

interface Props {
  currentLocale: Locale;
  currentPath?: string;
}

const { currentLocale, currentPath = '/' } = Astro.props;

const base = import.meta.env.BASE_URL.replace(/\/$/, '');

// Strip locale prefix and base path from currentPath
const cleanPath = currentPath
  .replace(new RegExp(`^${base}`), '')
  .replace(/^\/(ar|en|tr|ur)/, '') || '/';

const languages = [
  { code: 'de' as Locale, name: 'Deutsch', flag: 'ðŸ‡©ðŸ‡ª' },
  { code: 'ar' as Locale, name: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ©', flag: 'ðŸ‡¸ðŸ‡¦' },
  { code: 'en' as Locale, name: 'English', flag: 'ðŸ‡¬ðŸ‡§' },
  { code: 'tr' as Locale, name: 'TÃ¼rkÃ§e', flag: 'ðŸ‡¹ðŸ‡·' },
  { code: 'ur' as Locale, name: 'Ø§Ø±Ø¯Ùˆ', flag: 'ðŸ‡µðŸ‡°' },
];

const getLocalizedPath = (langCode: Locale) => {
  if (langCode === 'de') {
    return `${base}${cleanPath}`;
  }
  return `${base}/${langCode}${cleanPath}`;
};
---

<div class="language-selector">
  <select class="lang-dropdown" aria-label="Select language">
    {languages.map(lang => (
      <option
        value={getLocalizedPath(lang.code)}
        selected={currentLocale === lang.code}
      >
        {lang.flag} {lang.name}
      </option>
    ))}
  </select>
</div>

<script>
  document.querySelectorAll('.lang-dropdown').forEach(select => {
    select.addEventListener('change', (e) => {
      const target = e.target as HTMLSelectElement;
      window.location.href = target.value;
    });
  });
</script>

<style>
  .language-selector {
    display: flex;
    align-items: center;
  }

  .lang-dropdown {
    padding: 0.5rem 2rem 0.5rem 0.75rem;
    border: 2px solid #ddd;
    border-radius: 8px;
    background: white;
    color: #333;
    font-size: 0.95rem;
    font-family: inherit;
    cursor: pointer;
    transition: all 0.2s ease;
    appearance: none;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' viewBox='0 0 12 12'%3E%3Cpath fill='%23333' d='M6 9L1 4h10z'/%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: right 0.5rem center;
    background-size: 12px;
  }

  .lang-dropdown:hover {
    border-color: var(--color-primary);
    background-color: #FFF5E6;
  }

  .lang-dropdown:focus {
    outline: none;
    border-color: var(--color-primary);
    box-shadow: 0 0 0 3px rgba(255, 159, 64, 0.1);
  }

  .lang-dropdown option {
    padding: 0.5rem;
    font-size: 1rem;
  }

  @media (max-width: 768px) {
    .lang-dropdown {
      font-size: 0.9rem;
      padding: 0.4rem 1.75rem 0.4rem 0.6rem;
    }
  }
</style>