---
import type { CollectionEntry } from 'astro:content';
import type { Locale } from '../utils/i18n';
import { isRTL } from '../utils/i18n';

interface Props {
  primaryStory: CollectionEntry<'stories'>;
  primaryContent: any;
  primaryLocale: Locale;
  secondaryStory: CollectionEntry<'stories'>;
  secondaryContent: any;
  secondaryLocale: Locale;
}

const {
  primaryStory,
  primaryContent: PrimaryContent,
  primaryLocale,
  secondaryStory,
  secondaryContent: SecondaryContent,
  secondaryLocale
} = Astro.props;

const primaryIsRTL = isRTL(primaryLocale);
const secondaryIsRTL = isRTL(secondaryLocale);

const languageNames = {
  de: 'Deutsch',
  ar: 'Ø§Ù„Ø¹Ø±Ø¨ÙŠØ©',
  en: 'English',
  tr: 'TÃ¼rkÃ§e',
  ur: 'Ø§Ø±Ø¯Ùˆ',
};
---

<div class="bilingual-view">
  <div class="bilingual-header">
    <h3>Bilingual Mode</h3>
    <div class="language-labels">
      <span class="lang-label primary">{languageNames[primaryLocale]}</span>
      <span class="separator">â†”</span>
      <span class="lang-label secondary">{languageNames[secondaryLocale]}</span>
    </div>
  </div>

  <div class="bilingual-container" id="bilingual-container">
    <div
      class={`story-column primary ${primaryIsRTL ? 'rtl' : 'ltr'}`}
      id="primary-story"
      dir={primaryIsRTL ? 'rtl' : 'ltr'}
    >
      <div class="column-header">
        <h4>{primaryStory.data.title}</h4>
        <span class="flag">{primaryLocale === 'de' ? 'ðŸ‡©ðŸ‡ª' : primaryLocale === 'ar' ? 'ðŸ‡¸ðŸ‡¦' : primaryLocale === 'en' ? 'ðŸ‡¬ðŸ‡§' : primaryLocale === 'tr' ? 'ðŸ‡¹ðŸ‡·' : 'ðŸ‡µðŸ‡°'}</span>
      </div>
      <div class="story-content">
        <PrimaryContent />
      </div>
    </div>

    <div class="divider"></div>

    <div
      class={`story-column secondary ${secondaryIsRTL ? 'rtl' : 'ltr'}`}
      id="secondary-story"
      dir={secondaryIsRTL ? 'rtl' : 'ltr'}
    >
      <div class="column-header">
        <h4>{secondaryStory.data.title}</h4>
        <span class="flag">{secondaryLocale === 'de' ? 'ðŸ‡©ðŸ‡ª' : secondaryLocale === 'ar' ? 'ðŸ‡¸ðŸ‡¦' : secondaryLocale === 'en' ? 'ðŸ‡¬ðŸ‡§' : secondaryLocale === 'tr' ? 'ðŸ‡¹ðŸ‡·' : 'ðŸ‡µðŸ‡°'}</span>
      </div>
      <div class="story-content">
        <SecondaryContent />
      </div>
    </div>
  </div>
</div>

<script>
  // Sync scrolling between columns
  const primaryColumn = document.getElementById('primary-story');
  const secondaryColumn = document.getElementById('secondary-story');

  let isPrimaryScrolling = false;
  let isSecondaryScrolling = false;

  if (primaryColumn && secondaryColumn) {
    primaryColumn.addEventListener('scroll', () => {
      if (!isSecondaryScrolling) {
        isPrimaryScrolling = true;
        const scrollPercentage = primaryColumn.scrollTop / (primaryColumn.scrollHeight - primaryColumn.clientHeight);
        secondaryColumn.scrollTop = scrollPercentage * (secondaryColumn.scrollHeight - secondaryColumn.clientHeight);
        setTimeout(() => { isPrimaryScrolling = false; }, 50);
      }
    });

    secondaryColumn.addEventListener('scroll', () => {
      if (!isPrimaryScrolling) {
        isSecondaryScrolling = true;
        const scrollPercentage = secondaryColumn.scrollTop / (secondaryColumn.scrollHeight - secondaryColumn.clientHeight);
        primaryColumn.scrollTop = scrollPercentage * (primaryColumn.scrollHeight - primaryColumn.clientHeight);
        setTimeout(() => { isSecondaryScrolling = false; }, 50);
      }
    });
  }
</script>

<style>
  .bilingual-view {
    background: white;
    border-radius: 12px;
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
    overflow: hidden;
    margin: 2rem 0;
  }

  .bilingual-header {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    padding: 1.5rem;
    text-align: center;
  }

  .bilingual-header h3 {
    margin: 0 0 0.75rem 0;
    font-size: 1.5rem;
  }

  .language-labels {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 1rem;
    flex-wrap: wrap;
  }

  .lang-label {
    padding: 0.5rem 1rem;
    background: rgba(255, 255, 255, 0.2);
    border-radius: 20px;
    font-weight: 600;
    font-size: 0.95rem;
  }

  .separator {
    font-size: 1.5rem;
    font-weight: bold;
  }

  .bilingual-container {
    display: grid;
    grid-template-columns: 1fr 2px 1fr;
    min-height: 70vh;
    max-height: none;
  }

  .story-column {
    overflow-y: auto;
    padding: 2rem;
    scroll-behavior: smooth;
  }

  .story-column.rtl {
    direction: rtl;
    text-align: right;
  }

  .story-column.ltr {
    direction: ltr;
    text-align: left;
  }

  .divider {
    background: linear-gradient(180deg, #667eea 0%, #764ba2 100%);
    width: 2px;
  }

  .column-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 1.5rem;
    padding-bottom: 1rem;
    border-bottom: 2px solid #FFD93D;
  }

  .column-header h4 {
    margin: 0;
    color: var(--color-primary);
    font-size: 1.25rem;
    flex: 1;
  }

  .column-header .flag {
    font-size: 2rem;
    margin-left: 1rem;
  }

  .rtl .column-header .flag {
    margin-left: 0;
    margin-right: 1rem;
  }

  .story-content :global(h2) {
    color: var(--color-primary);
    margin-top: 1.5rem;
    margin-bottom: 1rem;
    font-size: 1.5rem;
  }

  .story-content :global(h3) {
    color: var(--color-text);
    margin-top: 1.25rem;
    margin-bottom: 0.75rem;
  }

  .story-content :global(p) {
    line-height: 1.8;
    margin-bottom: 1rem;
    font-size: 1.05rem;
  }

  .story-content :global(ul) {
    padding-left: 2rem;
    margin-bottom: 1.5rem;
  }

  .rtl .story-content :global(ul) {
    padding-left: 0;
    padding-right: 2rem;
  }

  .story-content :global(li) {
    margin-bottom: 0.75rem;
    line-height: 1.6;
  }

  /* Custom scrollbar */
  .story-column::-webkit-scrollbar {
    width: 8px;
  }

  .story-column::-webkit-scrollbar-track {
    background: #f1f1f1;
  }

  .story-column::-webkit-scrollbar-thumb {
    background: #667eea;
    border-radius: 4px;
  }

  .story-column::-webkit-scrollbar-thumb:hover {
    background: #764ba2;
  }

  @media (max-width: 1024px) {
    .bilingual-container {
      grid-template-columns: 1fr;
      grid-template-rows: auto 2px auto;
      max-height: none;
    }

    .divider {
      height: 2px;
      width: 100%;
      background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);
    }

    .story-column {
      max-height: 60vh;
    }
  }

  @media (max-width: 768px) {
    .bilingual-header {
      padding: 1rem;
    }

    .bilingual-header h3 {
      font-size: 1.25rem;
    }

    .story-column {
      padding: 1.5rem 1rem;
      max-height: 50vh;
    }

    .column-header h4 {
      font-size: 1.1rem;
    }

    .column-header .flag {
      font-size: 1.5rem;
    }

    .story-content :global(p) {
      font-size: 1rem;
    }
  }
</style>
